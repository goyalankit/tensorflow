# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: AzurePool
jobs:
- job: build_tensorflow_java
  strategy:
    maxParallel: 3
    matrix: 
      CPU_JAVA:
        processor: CPU
        mkl: ""
        lang: '//tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni'
      CPU_JAVA_MKL:
        processor: CPU
        mkl: --config=mkl
        lang: '//tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni'
  timeoutInMinutes: 360
  displayName: Build and test tensorflow
  steps:
  - bash: >-
      ./tensorflow/tools/ci_build/ci_build.sh $(processor) bazel build $(mkl) 
      --keep_going --verbose_failures --test_output=all
      $(lang)
    displayName: Build and test tensorflow
  - bash: >-
      cp 'bazel-bin/tensorflow/java/libtensorflow.jar' $(Build.ArtifactStagingDirectory)/artifacts
      cp '*/bazel-bin/tensorflow/java/libtensorflow_jni.so' $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'tensorflow_$(processor)_$(Build.BuildId)'

# - job: build_tensorflow_pip
#   strategy:
#     maxParallel: 3
#     matrix: 
#       CPU_PIP:
#         processor: CPU
#         mkl: ""
#         lang: '//tensorflow/tools/pip_package:build_pip_package'
#       CPU_PIP_MKL:
#         processor: CPU
#         mkl: --config=mkl
#         lang: '//tensorflow/tools/pip_package:build_pip_package'
#   timeoutInMinutes: 360
#   displayName: Build and test tensorflow
#   steps:
#   - bash: >-
#       ./tensorflow/tools/ci_build/ci_build.sh $(processor) bazel build $(mkl) 
#       --keep_going --verbose_failures --test_output=all
#       $(lang)
#     displayName: Build and test tensorflow
