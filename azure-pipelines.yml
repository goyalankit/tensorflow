# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  TensorflowVersion: 1.14.1
  MajorVersion: 1
  MinorVersion: 14
  InitialReleaseTagNumber: 1
  IncrementReleaseTagNumber: $[counter(variables['InitialReleaseTagNumber'], 0)]

pool: AzTfBuildPool

stages:
- stage: Build
  
  jobs:    
  - job: build_java
    strategy:
      maxParallel: 2
      matrix:
        java:
          lang: java
        # python:
        #   lang: python
    timeoutInMinutes: 300

    steps:
    - bash: find /opt
      displayName: '[Debug] Print the contents of /opt'

    - bash: sudo docker build /opt/linkedin/docker/ -t tf
      displayName: Build docker image

    - script: |
        mkdir -p $(Build.SourcesDirectory)/output_artifacts
      displayName: Create directories
    

    - bash: |
        cat > bazel_config_env_file <<EOF
          CC_OPT_FLAGS="-march=core-avx-i -Wno-sign-compare"
        EOF

    - bash: |
        sudo docker run --rm -w /tensorflow -v $(Build.SourcesDirectory):/tensorflow -v $(Build.SourcesDirectory)/output_artifacts:/artifacts tf "--tensorflow_version=$(TensorflowVersion)" "--artifact_dir=/artifacts" "--lang=$(lang)" "--bazel_config_env_file=bazel_config_env_file"
      displayName: Build tensorflow
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/output_artifacts' 
        includeRootFolder: false 
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/tensorflow_$(lang)_$(Build.BuildId).tar.gz'
        verbose: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: tensorflow_$(lang)_$(Build.BuildId).tar.gz


- stage: prepare_and_publish_artifacts
  displayName: Prepare and publish artifacts
  jobs:
    - job: prepare_and_publish_java
      displayName: Prepare and publish java artifacts

      steps:      
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            itemPattern: '**/tensorflow_java*.tar.gz'
            downloadPath: '$(System.ArtifactsDirectory)'
            artifactName: tensorflow_java_$(Build.BuildId).tar.gz            
        
        - script: mkdir -p $(agent.builddirectory)/p/artifacts/tensorflow-java/libs
          displayName: Create a preparation directory      

        - task: ExtractFiles@1
          inputs:
            archiveFilePatterns: '$(System.ArtifactsDirectory)/*.tar.gz'
            destinationFolder: '$(agent.builddirectory)/p'
            cleanDestinationFolder: false

        - bash: sudo bash /opt/linkedin/build_tf.sh --artifact_dir=$(agent.builddirectory)/p --tensorflow_version='$(TensorflowVersion)' --lang='java'
          displayName: Create jar

        - task: GitHubRelease@0
          inputs:
            gitHubConnection: 'goyalankit'
            repositoryName: '$(Build.Repository.Name)'
            action: create
            target: $(Build.SourceVersion)
            tagSource: 'manual'
            tag: v$(MajorVersion).$(MinorVersion).$(IncrementReleaseTagNumber)-java
            changeLogCompareToRelease: lastFullRelease
            changeLogType: commitBased
            assets: $(agent.builddirectory)/p/artifacts/tensorflow-java/libs/libtensorflow.jar
