# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  MajorVersion: 1
  MinorVersion: 14
  InitialReleaseTagNumber: 1
  IncrementReleaseTagNumber: $[counter(variables['InitialReleaseTagNumber'], 0)]

pool: AzurePool
jobs:
- job: build_tensorflow_java
  strategy:
    maxParallel: 3
    matrix: 
      java: 
        lang: java
      # python:
      #   lang: python
  timeoutInMinutes: 360
  displayName: Build and test tensorflow
  steps:    
  - bash: sudo docker build /opt/linkedin/docker/ -t tf
    displayName: Build Docker Image
  
  - script: |
      mkdir -p $(Build.SourcesDirectory)/output_artifacts
      mkdir -p $(Build.ArtifactStagingDirectory)/artifacts/tensorflow-java/libs
      mkdir -p $(Build.ArtifactStagingDirectory)/artifacts/tensorflow-rhle7/libs

    displayName: Create output artifact directory

  - bash: >-
      sudo docker run --rm -w /tensorflow -v $(Build.SourcesDirectory):/tensorflow -v $(Build.SourcesDirectory)/output_artifacts:/artifacts tf "--tensorflow_version=2.0.0" "--artifact_dir=/artifacts"  "--lang=$(lang)"
    displayName: Build tensorflow in docker
    
  - bash: >-
      cp -rf $(Build.SourcesDirectory)/output_artifacts/* $(Build.ArtifactStagingDirectory)
    displayName: Copy the artifacts to staging directory

  - script: |
      cp -rf /home/tfadmin/dla/* $(Build.ArtifactStagingDirectory)

  - script: |      
      set -x
      tf_lib_root=$(Build.ArtifactStagingDirectory)/artifacts/tensorflow-java/libs
      cp $(Build.ArtifactStagingDirectory)/libtensorflow.jar $tf_lib_root
      chmod +w $tf_lib_root/libtensorflow.jar

      linux_tmp_dir=$(mktemp -d /tmp/jni_linux.XXXXXX)
      linux_jni_subdir="org/tensorflow/native/linux-x86_64/"
      linux_jni_dir="$linux_tmp_dir/$linux_jni_subdir"
      mkdir -p "$linux_jni_dir"

      cp $(Build.ArtifactStagingDirectory)/libtensorflow_jni.so "$linux_jni_dir"
      jar uf $tf_lib_root/libtensorflow.jar -C $linux_tmp_dir $linux_jni_subdir/libtensorflow_jni.so
      
      cp $(Build.ArtifactStagingDirectory)/libtensorflow_framework.so.1.14.1 "$linux_jni_dir"
      jar uf $tf_lib_root/libtensorflow.jar -C $linux_tmp_dir $linux_jni_subdir/libtensorflow_framework.so.1.14.1  

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: tensorflow_$(Build.BuildId)

  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'goyalankit'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'manual'
      tag: 'v$(MajorVersion).$(MinorVersion).$(IncrementReleaseTagNumber)-$(lang)'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: '$(Build.ArtifactStagingDirectory)/*'      